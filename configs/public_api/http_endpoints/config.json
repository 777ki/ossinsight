[
  {
    "name": "/repos/issues/open-to-first-resp",
    "description": "Return the p0 - p100 number  of the duration between issue opened to closed (Unit: hours)",
    "method": "GET",
    "endpoint": "/repos/issues/open_to_first_responded",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "from",
        "type": "string",
        "required": 0,
        "default": "2000-01-01",
        "description": ""
      },
      {
        "name": "to",
        "type": "string",
        "required": 0,
        "default": "2099-12-31",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 30000,
      "row_limit": 1000,
      "cache_enabled": 1,
      "cache_ttl": 600,
      "enable_pagination": 0
    },
    "tag": "Default",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-issues-open_to_first_responded.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "/repos/issues/open_to_closed",
    "description": "Return the p0 - p100 number  of the duration between issue opened to closed (Unit: hours)",
    "method": "GET",
    "endpoint": "/repos/issues/open_to_closed",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "from",
        "type": "string",
        "required": 0,
        "default": "2000-01-01",
        "description": ""
      },
      {
        "name": "to",
        "type": "string",
        "required": 0,
        "default": "2099-12-31",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 30000,
      "row_limit": 1000,
      "cache_enabled": 1,
      "cache_ttl": 600,
      "enable_pagination": 0
    },
    "tag": "Default",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-issues-open_to_closed.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "/repos/pull_reques/overview",
    "description": "Returns statistics on pull request activities for a specific GitHub repository. It reports the total number of pull requests, the count of unique contributors who opened pull requests, the total number of pull request reviews, and the count of unique reviewers. ",
    "method": "GET",
    "endpoint": "/repos/pull_requests/overview",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 30000,
      "row_limit": 1000,
      "cache_enabled": 1,
      "cache_ttl": 600,
      "enable_pagination": 0
    },
    "tag": "Default",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-pull_requests-overview.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "/repos/issues/overview",
    "description": "Provides detailed statistics on issue-related activities within a specified GitHub repository. It returns the total count of issues opened, the number of unique users who created issues, the total count of issue comments, and the number of unique users who commented on issues",
    "method": "GET",
    "endpoint": "/repos/issues/overview",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 30000,
      "row_limit": 1000,
      "cache_enabled": 1,
      "cache_ttl": 600,
      "enable_pagination": 0
    },
    "tag": "Default",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-issues-overview.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "/repos/overview",
    "description": "This API retrieves key engagement metrics for a specific GitHub repository. It returns a snapshot of the repository's activity, including the total number of stars, commits, issues, and unique pull request creators",
    "method": "GET",
    "endpoint": "/repos/overview",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 30000,
      "row_limit": 1000,
      "cache_enabled": 1,
      "cache_ttl": 600,
      "enable_pagination": 0
    },
    "tag": "Default",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-overview.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "List Hot Collections",
    "description": "Returns the top 20 most visited collections within the last month, including collection IDs, names, and associated repository metrics. The results are ordered by the number of visits in descending order to highlight the most popular collections.",
    "method": "GET",
    "endpoint": "/collections/hot",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [],
    "settings": {
      "timeout": 5000,
      "row_limit": 200,
      "cache_enabled": 1,
      "cache_ttl": 600,
      "enable_pagination": 1
    },
    "tag": "Collections",
    "batch_operation": 0,
    "sql_file": "sql/GET-collections-hot.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "Collection ranking by issues",
    "description": "Returns the total number of issues, ranking of repositories based on the number of new issues, the percentage growth of issues, and the changes in rank between the current and past periods. The statistics are filtered based on a given collection ID in the past month",
    "method": "GET",
    "endpoint": "/collections/ranking_by_issues",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "collection_id",
        "type": "integer",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "period",
        "type": "string",
        "required": 0,
        "default": "past_28_days",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 30000,
      "row_limit": 1000,
      "cache_enabled": 1,
      "cache_ttl": 600,
      "enable_pagination": 0
    },
    "tag": "Default",
    "batch_operation": 0,
    "sql_file": "sql/GET-collections-ranking_by_issues.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "Collection ranking by prs",
    "description": "Compares PR data over two selected time periods, returns\nThe total number of pull requests.\nThe growth of pull requests in the current period compared to the previous period.\nThe ranking of each repository by the number of pull requests ",
    "method": "GET",
    "endpoint": "/collections/ranking_by_prs",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "collection_id",
        "type": "integer",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "period",
        "type": "string",
        "required": 0,
        "default": "past_28_days",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 30000,
      "row_limit": 1000,
      "cache_enabled": 1,
      "cache_ttl": 600,
      "enable_pagination": 0
    },
    "tag": "Default",
    "batch_operation": 0,
    "sql_file": "sql/GET-collections-ranking_by_prs.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "Collection ranking by stars",
    "description": "It provides counts of new stars, star growth percentages, and ranking changes, reflecting the repositories' popularity and community engagement over time.",
    "method": "GET",
    "endpoint": "/collections/ranking_by_stars",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "collection_id",
        "type": "integer",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "period",
        "type": "string",
        "required": 0,
        "default": "past_28_days",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 30000,
      "row_limit": 1000,
      "cache_enabled": 1,
      "cache_ttl": 600,
      "enable_pagination": 0
    },
    "tag": "Default",
    "batch_operation": 0,
    "sql_file": "sql/GET-collections-ranking_by_stars.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "List Issue Creators",
    "description": "List GitHub users who have created issues in a specific repository.The returned data includes the user ID, login, name, total issues created, and the date of the first issue opened. Limits and offsets can be applied for pagination purposes.",
    "method": "GET",
    "endpoint": "/repos/issue_creators",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "exclude_bots",
        "type": "boolean",
        "required": 0,
        "default": "true",
        "description": ""
      },
      {
        "name": "sort",
        "type": "string",
        "required": 0,
        "default": "issues-desc",
        "description": ""
      },
      {
        "name": "offset",
        "type": "integer",
        "required": 0,
        "default": "0",
        "description": ""
      },
      {
        "name": "limit",
        "type": "integer",
        "required": 0,
        "default": "30",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 5000,
      "row_limit": 2000,
      "cache_enabled": 0,
      "cache_ttl": 0,
      "enable_pagination": 0
    },
    "tag": "Default",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-issue_creators.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "List Pull Request Creators",
    "description": "Lists users who have created pull requests in a specified GitHub repository. Returns user IDs, logins, names, the number of pull requests made, and the dates of their first opened and first merged pull requests. ",
    "method": "GET",
    "endpoint": "/repos/pull_request_creators",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "exclude_bots",
        "type": "boolean",
        "required": 0,
        "default": "true",
        "description": ""
      },
      {
        "name": "sort",
        "type": "string",
        "required": 0,
        "default": "prs-desc",
        "description": ""
      },
      {
        "name": "offset",
        "type": "integer",
        "required": 0,
        "default": "0",
        "description": ""
      },
      {
        "name": "limit",
        "type": "integer",
        "required": 0,
        "default": "30",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 5000,
      "row_limit": 2000,
      "cache_enabled": 0,
      "cache_ttl": 0,
      "enable_pagination": 0
    },
    "tag": "Default",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-pull_request_creators.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "Issue Creators History",
    "description": "Provides a cumulative count of unique issue creators for a specific GitHub repository. It allows customization of the aggregation period (daily, weekly, or monthly) and includes a date range filter. The output includes the date and the cumulative number of unique users who have opened issues up to that date.\n",
    "method": "GET",
    "endpoint": "/repos/issue_creators/history",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "per",
        "type": "string",
        "required": 0,
        "default": "month",
        "description": ""
      },
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "from",
        "type": "string",
        "required": 0,
        "default": "2000-01-01",
        "description": ""
      },
      {
        "name": "to",
        "type": "string",
        "required": 0,
        "default": "2099-12-31",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 5000,
      "row_limit": 2000,
      "cache_enabled": 0,
      "cache_ttl": 0,
      "enable_pagination": 0
    },
    "tag": "Issue Creators",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-issue_creators-history.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "Pull Request Creators History",
    "description": "This API delivers a cumulative tally of unique pull request creators for a given GitHub repository, aggregated over a selected time frame (daily, weekly, or monthly). It filters data based on a specified date range and displays the cumulative count of distinct users who have opened pull requests as of each date within the range.\n",
    "method": "GET",
    "endpoint": "/repos/pull_request_creators/history",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "per",
        "type": "string",
        "required": 0,
        "default": "month",
        "description": ""
      },
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "from",
        "type": "string",
        "required": 0,
        "default": "2000-01-01",
        "description": ""
      },
      {
        "name": "to",
        "type": "string",
        "required": 0,
        "default": "2099-12-31",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 5000,
      "row_limit": 2000,
      "cache_enabled": 0,
      "cache_ttl": 0,
      "enable_pagination": 0
    },
    "tag": "Pull Request Creators",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-pull_request_creators-history.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "Stargazers History",
    "description": "This API provides a cumulative count of unique stargazers over a specified time period for a specific GitHub repository. It offers options to aggregate data on a daily, weekly, or monthly basis. The output includes the date and the cumulative number of unique users who have starred the repository up to that date, within the defined date range.",
    "method": "GET",
    "endpoint": "/repos/stargazers/history",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "per",
        "type": "string",
        "required": 0,
        "default": "month",
        "description": ""
      },
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "from",
        "type": "string",
        "required": 0,
        "default": "2000-01-01",
        "description": ""
      },
      {
        "name": "to",
        "type": "string",
        "required": 0,
        "default": "2099-12-31",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 5000,
      "row_limit": 2000,
      "cache_enabled": 0,
      "cache_ttl": 0,
      "enable_pagination": 0
    },
    "tag": "Stargazers",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-stargazers-history.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "List Stargazers Orgs",
    "description": "This API analyzes the distribution of stargazers across organizations for a specific GitHub repository. It groups stargazers based on their organization, providing the count and percentage of stargazers from each organization within a specified date range. The API also includes an option to exclude unknown organizations and ranks the results by the number of stargazers in descending order.",
    "method": "GET",
    "endpoint": "/repos/stargazers/organizations",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "from",
        "type": "string",
        "required": 0,
        "default": "2000-01-01",
        "description": ""
      },
      {
        "name": "to",
        "type": "string",
        "required": 0,
        "default": "2099-12-31",
        "description": ""
      },
      {
        "name": "exclude_unknown",
        "type": "string",
        "required": 0,
        "default": "",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 10000,
      "row_limit": 300,
      "cache_enabled": 0,
      "cache_ttl": 0,
      "enable_pagination": 0
    },
    "tag": "Stargazers",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-stargazers-organizations.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "List Issue Creators Orgs",
    "description": "This API gathers and analyzes data on issue creators by their organization for a specific GitHub repository. It counts and calculates the percentage of issue creators from different organizations within a given date range. The API also includes an option to exclude creators from unknown organizations and sorts the results by the number of issue creators in descending order.",
    "method": "GET",
    "endpoint": "/repos/issue_creators/organizations",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "from",
        "type": "string",
        "required": 0,
        "default": "2000-01-01",
        "description": ""
      },
      {
        "name": "to",
        "type": "string",
        "required": 0,
        "default": "2099-12-31",
        "description": ""
      },
      {
        "name": "exclude_unknown",
        "type": "string",
        "required": 0,
        "default": "",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 10000,
      "row_limit": 300,
      "cache_enabled": 0,
      "cache_ttl": 0,
      "enable_pagination": 0
    },
    "tag": "Issue Creators",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-issue_creators-organizations.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "Trending Repos",
    "description": "Trending repos is an open source alternative to GitHub trends, which showcases recently popular open source projects in the GitHub community.\n\n☁️ Daily run on [TiDB Cloud](https://tidbcloud.com/?utm_source=ossinsight\u0026utm_medium=ossinsight_api), analyze upon dataset that has over 6 billion GitHub events.",
    "method": "GET",
    "endpoint": "/trends/repos",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "language",
        "type": "string",
        "required": 0,
        "default": "All",
        "description": ""
      },
      {
        "name": "period",
        "type": "string",
        "required": 0,
        "default": "past_24_hours",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 5000,
      "row_limit": 100,
      "cache_enabled": 0,
      "cache_ttl": 0,
      "enable_pagination": 0
    },
    "tag": "Trends",
    "batch_operation": 0,
    "sql_file": "sql/GET-trends-repos.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "List Collection Items",
    "description": "List Repositories with a Collection by specify collection ID.",
    "method": "GET",
    "endpoint": "/collections/repos",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "collection_id",
        "type": "integer",
        "required": 1,
        "default": "",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 5000,
      "row_limit": 50,
      "cache_enabled": 0,
      "cache_ttl": 0,
      "enable_pagination": 0
    },
    "tag": "Collections",
    "batch_operation": 0,
    "sql_file": "sql/GET-collections-repos.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "List Collections",
    "description": "It returns a list of each collection's unique ID and its name.",
    "method": "GET",
    "endpoint": "/collections",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [],
    "settings": {
      "timeout": 5000,
      "row_limit": 200,
      "cache_enabled": 0,
      "cache_ttl": 0,
      "enable_pagination": 1
    },
    "tag": "Collections",
    "batch_operation": 0,
    "sql_file": "sql/GET-collections.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "List PR Creators Orgs",
    "description": "This API provides a breakdown of pull request creators by their organization for a specific GitHub repository. It counts the distinct creators associated with each organization and calculates their proportion of the total pull requests within a specified time frame. The API can exclude creators from unknown organizations and sorts the results in descending order based on the number of pull request creators per organization.",
    "method": "GET",
    "endpoint": "/repos/pull_request_creators/organizations",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "from",
        "type": "string",
        "required": 0,
        "default": "2000-01-01",
        "description": ""
      },
      {
        "name": "to",
        "type": "string",
        "required": 0,
        "default": "2099-12-31",
        "description": ""
      },
      {
        "name": "exclude_unknown",
        "type": "boolean",
        "required": 0,
        "default": "true",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 10000,
      "row_limit": 2000,
      "cache_enabled": 0,
      "cache_ttl": 0,
      "enable_pagination": 0
    },
    "tag": "Pull Request Creators",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-pull_request_creators-organizations.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "List PR Creators Countries",
    "description": "Calculates the number and percentage of pull request creators from different countries within a defined time period. The API also provides the option to exclude creators from unknown countries and orders the results by the count of pull request creators per country in descending order.\n",
    "method": "GET",
    "endpoint": "/repos/pull_request_creators/countries",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "from",
        "type": "string",
        "required": 1,
        "default": "2000-01-01",
        "description": ""
      },
      {
        "name": "to",
        "type": "string",
        "required": 1,
        "default": "2099-12-31",
        "description": ""
      },
      {
        "name": "exclude_unknown",
        "type": "boolean",
        "required": 0,
        "default": "true",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 10000,
      "row_limit": 300,
      "cache_enabled": 0,
      "cache_ttl": 0,
      "enable_pagination": 0
    },
    "tag": "Pull Request Creators",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-pull_request_creators-countries.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "List Issue Creators Countries",
    "description": "Provides the count and percentage of issue creators from each country, filtering data within a specified time range. Additionally, the API has an option to exclude issue creators from unspecified or unknown countries, and it returns number of issue creators per country, in descending order.",
    "method": "GET",
    "endpoint": "/repos/issue_creators/countries",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "from",
        "type": "string",
        "required": 0,
        "default": "2000-01-01",
        "description": ""
      },
      {
        "name": "to",
        "type": "string",
        "required": 0,
        "default": "2099-12-31",
        "description": ""
      },
      {
        "name": "exclude_unknown",
        "type": "boolean",
        "required": 0,
        "default": "true",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 10000,
      "row_limit": 300,
      "cache_enabled": 0,
      "cache_ttl": 0,
      "enable_pagination": 0
    },
    "tag": "Issue Creators",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-issue_creators-countries.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "List Stargazers Countries",
    "description": "Counts the total number of stargazers from each country and calculates their proportion within a given time frame. The API includes an option to exclude stargazers from unspecified or unknown countries, and it orders the results by the count of stargazers per country in descending order.",
    "method": "GET",
    "endpoint": "/repos/stargazers/countries",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": 1,
        "default": "",
        "description": ""
      },
      {
        "name": "from",
        "type": "string",
        "required": 0,
        "default": "2000-01-01",
        "description": ""
      },
      {
        "name": "to",
        "type": "string",
        "required": 0,
        "default": "2099-12-31",
        "description": ""
      },
      {
        "name": "exclude_unknown",
        "type": "string",
        "required": 0,
        "default": "",
        "description": ""
      }
    ],
    "settings": {
      "timeout": 10000,
      "row_limit": 300,
      "cache_enabled": 0,
      "cache_ttl": 0,
      "enable_pagination": 0
    },
    "tag": "Stargazers",
    "batch_operation": 0,
    "sql_file": "sql/GET-repos-stargazers-countries.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  },
  {
    "name": "Hello World",
    "description": "",
    "method": "GET",
    "endpoint": "/hello",
    "data_source": {
      "cluster_id": 1379661944642684098
    },
    "params": [],
    "settings": {
      "timeout": 5000,
      "row_limit": 50,
      "cache_enabled": 0,
      "cache_ttl": 0,
      "enable_pagination": 0
    },
    "tag": "Default",
    "batch_operation": 0,
    "sql_file": "sql/GET-hello.sql",
    "type": "sql_endpoint",
    "return_type": "json"
  }
]